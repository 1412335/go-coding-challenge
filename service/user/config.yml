serviceName: "service.user"
version: "v1"
grpc:
  host: "user-service"
  port: 9090
  max-call-recv-msg-size: 0
  max-call-send-msg-size: 0
proxy:
  port: 8000
jwt:
  secretKey: "lu"
  duration: "1200s"
  issuer: "lu"
authRequiredMethods:
  - "/user.UserService/List": true
  - "/user.UserService/ListStream": true
  - "/user.UserService/Delete": true
  - "/user.UserService/Update": true
  - "/user.UserService/CreateAccount": true
  - "/user.UserService/ListAccounts": true
  - "/user.UserService/UpdateAccount": true
  - "/user.UserService/DeleteAccount": true
  - "/user.UserService/CreateTransaction": true
  - "/user.UserService/ListTransactions": true
  - "/user.UserService/UpdateTransaction": true
  - "/user.UserService/DeleteTransaction": true
# redis:
#   nodes:
#     - "host.docker.internal:6379"
#     - "redis:6379"
#   prefix: "user-service"
database:
  host: "postgres"
  port: 5432
  user:  "root"
  password: "root"
  scheme: "users"
  maxIdleConns: 100
  maxOpenConns: 100
  connectTimeout: "1h"
  debug: true
enableTLS: false
TLSCert:
  CACert : "./cert/ca-cert.pem"
  CertPem: "./cert/server-cert.pem"
  KeyPem : "./cert/server-key.pem"
log:
  #PANNIC, FATAL, ERROR, WARN, INFO, DEBUG
  mode: "dev"
  level: "DEBUG"
  levelTrace: "FATAL"
clientConfig:
  account:
    serviceName: "service.account"
    version: "v1"
    grpc: 
      host: "account-service"
      port: 9090
    enableTLS: false
    TLSCert:
      CACert : "./cert/ca-cert.pem"
  transaction:
    serviceName: "service.transaction"
    version: "v1"
    grpc: 
      host: "transaction-service"
      port: 9090
    enableTLS: false
  user:
    serviceName: "service.user.client"
    version: "v1"
    enableTracing: false
    grpc: 
      host: "localhost"
      port: 9090
    enableTLS: false